
(gdb) b phase_5
Breakpoint 1 at 0x40107b
(gdb) r
Starting program: /home/gcit/Desktop/12190061/ITS304/Assignment_1_2/bomb002-20210919T152343Z-001/bomb002/bomb 
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Public speaking is very easy.
Phase 1 defused. How about the next one?
1 2 4 8 16 32
That's number 2.  Keep going!
2 490
Halfway there!
24 2
So you got that one.  Try this one.
1 2

Breakpoint 1, 0x000000000040107b in phase_5 ()
(gdb) disas
Dump of assembler code for function phase_5:
=> 0x000000000040107b <+0>:	sub    $0x18,%rsp
   0x000000000040107f <+4>:	mov    %fs:0x28,%rax
   0x0000000000401088 <+13>:	mov    %rax,0x8(%rsp)
   0x000000000040108d <+18>:	xor    %eax,%eax
   0x000000000040108f <+20>:	lea    0x4(%rsp),%rcx
   0x0000000000401094 <+25>:	mov    %rsp,%rdx
   0x0000000000401097 <+28>:	mov    $0x4025b7,%esi //
   0x000000000040109c <+33>:	callq  0x400bb0 <__isoc99_sscanf@plt>
   0x00000000004010a1 <+38>:	cmp    $0x1,%eax
   0x00000000004010a4 <+41>:	jg     0x4010ab <phase_5+48>
   0x00000000004010a6 <+43>:	callq  0x401438 <explode_bomb>
   0x00000000004010ab <+48>:	mov    (%rsp),%eax
   0x00000000004010ae <+51>:	and    $0xf,%eax
   0x00000000004010b1 <+54>:	mov    %eax,(%rsp)
   0x00000000004010b4 <+57>:	cmp    $0xf,%eax
   0x00000000004010b7 <+60>:	je     0x4010e8 <phase_5+109>
   0x00000000004010b9 <+62>:	mov    $0x0,%ecx
   0x00000000004010be <+67>:	mov    $0x0,%edx
   0x00000000004010c3 <+72>:	add    $0x1,%edx
   0x00000000004010c6 <+75>:	cltq   
   0x00000000004010c8 <+77>:	mov    0x402440(,%rax,4),%eax
   0x00000000004010cf <+84>:	add    %eax,%ecx
   0x00000000004010d1 <+86>:	cmp    $0xf,%eax
   0x00000000004010d4 <+89>:	jne    0x4010c3 <phase_5+72>
   0x00000000004010d6 <+91>:	movl   $0xf,(%rsp)
   0x00000000004010dd <+98>:	cmp    $0xf,%edx
   0x00000000004010e0 <+101>:	jne    0x4010e8 <phase_5+109>
   0x00000000004010e2 <+103>:	cmp    0x4(%rsp),%ecx
   0x00000000004010e6 <+107>:	je     0x4010ed <phase_5+114>
   0x00000000004010e8 <+109>:	callq  0x401438 <explode_bomb>
   0x00000000004010ed <+114>:	mov    0x8(%rsp),%rax
   0x00000000004010f2 <+119>:	xor    %fs:0x28,%rax
   0x00000000004010fb <+128>:	je     0x401102 <phase_5+135>
   0x00000000004010fd <+130>:	callq  0x400b00 <__stack_chk_fail@plt>
   0x0000000000401102 <+135>:	add    $0x18,%rsp
   0x0000000000401106 <+139>:	retq   
--Type <RET> for more, q to quit, c to continue without paging--
End of assembler dump.
